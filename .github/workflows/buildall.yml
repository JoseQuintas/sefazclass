#
# buildall.yml
#
# input-output:  mingw_xxxx.zip
# input-outtup:  hb32_mingw_xxxx.zip
# output:        pack_hb32_mingw_xxxx.zip
# output: mingw_xxxx.zip
#

name: buildall

on:
  push:
  schedule:
   - cron: "0 3 1 * *"
  workflow_dispatch:
    inputs:
      name:
        description: 'mingw'
        default: 'mingw'
        required: true

jobs:

  mingwall:
    runs-on: windows-latest
    strategy:
       matrix:
          compiler:
          - mingw_1501
          - mingw_1502

    steps:

    - name: Debug Event Name
      run: |
         echo "Event Name: ${{ github.event_name }}"
         echo "Event Name: ${{ github.event_name }}"
         echo "Event Name: ${{ github.event_name }}"
         echo "Event Name: ${{ github.event_name }}"

#----- restore zip -----

    - name: load mingw_xxxx.zip
      ##if: ${{ matrix.compiler != 'mingw_1502' && matrix.compiler != 'mingw_1502' }}
      uses: dawidd6/action-download-artifact@v6
      with:
         workflow: buildall.yml
         workflow_conclusion: success
         name: ${{matrix.compiler}}
         path: c:\temp
         repo: JoseQuintas/sefazclass

    - name: load hb32_xxx.zip
      if: ${{ github.event_name == 'push' }}
      uses: dawidd6/action-download-artifact@v6
      with:
         workflow: buildall.yml
         workflow_conclusion: success
         name: hb32_${{matrix.compiler}}
         path: c:\temp
         repo: JoseQuintas/sefazclass

    - name: load addons_hb32_xxxx.zip
      if: ${{ github.event_name == 'none' }}
      uses: dawidd6/action-download-artifact@v6
      with:
         workflow: buildall.yml
         workflow_conclusion: success
         name: addons_hb32_${{matrix.compiler}}
         path: c:\temp
         repo: JoseQuintas/sefazclass

#----- unzip -----

    #- name: mingw1502
    #  run: |
    #     git clone https://github.com/JoseQuintas/sefazclass c:\temp\lixo --depth 1
    #     Copy-Item -Path "c:\temp\lixo\mingw_1520.7z" -Destination "c:\temp\mingw_1502.7z"

    - name: Unzip mingw_xxxx
      env:
         PATH: c:\program files\7-zip
      run: |
         c:
         7z x -y c:\temp\${{matrix.compiler}}.7z -oc:\temp\mingw

    - name: Unzip hb32_xxxx
      if: ${{ github.event_name == 'push' }}
      env:
         PATH: c:\program files\7-zip
      run: |
         c:
         md c:\temp\harbour\comp
         7z x -y c:\temp\hb32_${{matrix.compiler}}.7z -oc:\temp\harbour

    - name: Unzip addons
      if: ${{ 'true' == 'false' }}
      env:
         PATH: c:\program files\7-zip
      run: |
         c:
         md c:\harbour\addons
         7z x -y c:\temp\addons_hb32_${{matrix.compiler}}.7z -oc:\temp\harbour\addons

#----- load source -----

    - name: Load harbour.git
      if: ${{ github.event_name != 'push' }}
      env:
         REPO_HARBOUR: https://github.com/JoseQuintas/harbour32_fork
         PATH_HARBOUR: c:\temp\harbour32
      run: |
         c:
         git clone $env:REPO_HARBOUR   $env:PATH_HARBOUR --depth 1

    - name: Load Source Code
      env:
         REPO_SEFAZ:    https://github.com/JoseQuintas/sefazclass
         REPO_BOLETO:   https://github.com/JoseQuintas/boletoclass
         REPO_RMCHART:  https://github.com/JoseQuintas/rmchartclass
         REPO_WVGTEST:  https://github.com/JoseQuintas/wvgtest
         REPO_PDFCLASS: http://github.com/JoseQuintas/pdfclass
         REPO_HWGUI:    https://github.com/JoseQuintas/hwgui_fork
         REPO_HMGE:     https://github.com/JoseQuintas/hmge_fork
         REPO_HMG3:     https://github.com/JoseQuintas/hmg3_fork
         REPO_OOHG:     https://github.com/JoseQuintas/oohg_fork
         REPO_OOHGSAMP: https://github.com/JoseQuintas/oohg_samples_fork
         REPO_DLGAUTO:  https://github.com/JoseQuintas/dlgauto
         PATH_SEFAZ:    c:\temp\harbour\addons\sefazclass
         PATH_BOLETO:   c:\temp\harbour\addons\boletoclass
         PATH_RMCHART:  c:\temp\harbour\addons\rmchartclass
         PATH_PDFCLASS: c:\temp\harbour\addons\pdfclass
         PATH_WVGTEST:  c:\temp\harbour\addons\wvgtest
         PATH_HWGUI:    c:\temp\harbour\addons\hwgui
         PATH_HMGE:     c:\temp\harbour\addons\hmge
         PATH_HMG3:     c:\temp\harbour\addons\hmg3
         PATH_OOHG:     c:\temp\harbour\addons\oohg
         PATH_ZEPACK:   c:\temp\harbour\addons\zepack
         PATH_DLGAUTO:  c:\temp\harbour\addons\dlgauto
      run: |
         c:
         git clone $env:REPO_SEFAZ       $env:PATH_SEFAZ        --depth 1
         git clone $env:REPO_BOLETO      $env:PATH_BOLETO       --depth 1
         git clone $env:REPO_RMCHART     $env:PATH_RMCHART      --depth 1
         git clone $env:REPO_WVGTEST     $env:PATH_WVGTEST      --depth 1
         git clone $env:REPO_PDFCLASS    $env:PATH_PDFCLASS     --depth 1
         git clone $env:REPO_HWGUI       $env:PATH_HWGUI        --depth 1
         git clone $env:REPO_HMGE        $env:PATH_HMGE         --depth 1
         git clone $env:REPO_HMG3        $env:PATH_HMG3         --depth 1
         git clone $env:REPO_OOHG        $env:PATH_OOHG         --depth 1
         git clone $env:REPO_OOHGSAMP    $env:PATH_OOHG\SAMPLES --depth 1
         git clone $env:REPO_DLGAUTO     $env:PATH_DLGAUTO      --depth 1

#----- build -----

    - name: Build harbour 32 bits
      if: ${{ github.event_name != 'push' }}
      env:
         HB_BUILD_STRIP: all
         HB_COMPILER: mingw
         HB_INSTALL_PREFIX: c:\temp\harbour
         PATH: c:\temp\mingw\mingw32\bin;c:\temp\harbour\bin
      run: |
         c:
         cd c:\temp\harbour32
         mingw32-make clean install

    - name: Build libs 32 bits
      env:
         HB_BUILD_STRIP: all
         HB_COMPILER: mingw
         HB_INSTALL_PREFIX: c:\temp\harbour
         HBMK_CMD: -workdir=c:\temp -q -quiet
         PATH: c:\temp\harbour\bin;c:\temp\mingw\mingw32\bin
      run: |
         c:

         Write-Output ""
         Write-Output ""
         Write-Output "sefazclass"
         Write-Output ""
         cd c:\temp\harbour\addons\sefazclass
         hbmk2 sefazclass.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "boletoclass"
         Write-Output ""
         cd c:\temp\harbour\addons\boletoclass
         hbmk2 boletoclass.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "rmchartclass"
         Write-Output ""
         cd c:\temp\harbour\addons\rmchartclass
         hbmk2 rmchartclass.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "pdfclass"
         Write-Output ""
         cd c:\temp\harbour\addons\pdfclass
         hbmk2 pdfclass.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "wvgtest"
         Write-Output ""
         cd c:\temp\harbour\addons\wvgtest
         hbmk2 wvgtest.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "bostaurus"
         Write-Output ""
         cd c:\temp\harbour\addons\wvgtest\bostaurus
         hbmk2 bostaurus.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "hwgui"
         Write-Output ""
         cd c:\temp\harbour\addons\hwgui
         hbmk2 hbxml.hbp    -q -rebuild
         hbmk2 hwgui.hbp    -q -rebuild
         hbmk2 hwgdebug.hbp -q -rebuild
         hbmk2 procmisc.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "hmge"
         Write-Output ""
         cd c:\temp\harbour\addons\hmge
         hbmk2 hmge.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "hmg3"
         Write-Output ""
         cd c:\temp\harbour\addons\hmg3
         hbmk2 hmg3.hbp -q -rebuild
         cd c:\temp\harbour\addons\hmg3\source\ide
         hbmk2 *.hbp -q -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "oohg"
         Write-Output ""
         cd c:\temp\harbour\addons\oohg
         hbmk2 oohg_hb.hbp -q -w0 -rebuild

         Write-Output ""
         Write-Output ""
         Write-Output "test dlgauto"
         Write-Output ""
         cd c:\temp\harbour\addons\dlgauto\source
         hbmk2 test hwgui.hbc -q -rebuild
         hbmk2 test hmg3.hbc  -q -rebuild
         hbmk2 test hmge.hbc  -q -rebuild
         hbmk2 test oohg_hb.hbc  -q -rebuild
#         hbmk2 test gtwvg.hbc -q -rebuild

#----- create zip -----

    - name: Create hb32_xxxx.zip
      if: ${{ github.event_name != 'push' }}
      env:
         PATH: c:\program files\7-zip
      run: |
         c:
         7z a -r c:\temp\hb32_${{matrix.compiler}}.7z c:\temp\harbour\*.* -xr'!.git' -xr'!.github' -xr'!.hbmk' -xr'!addons'

    - name: Create addons_hb32_xxxx.zip
      env:
         PATH: c:\program files\7-zip
      run: |
         c:
         7z a -r c:\temp\addons_hb32_${{matrix.compiler}}.7z c:\temp\harbour\addons\*.* -xr'!.git' -xr'!.github' -xr'!.hbmk'

    - name: Create pack_hb32_xxxx.zip
      if: ${{ 'true' == 'false' }}
      env:
         PATH: c:\program files\7-zip
      run: |
         c:
         7z a -r c:\temp\pack_hb32_${{matrix.compiler}}.7z c:\temp\harbour\*.* -xr'!.git' -xr'!.github' -xr'!.hbmk'

    - name: Save mingw_xxxx
      uses: actions/upload-artifact@v4
      with:
         name: ${{matrix.compiler}}
         path: c:\temp\${{matrix.compiler}}.7z

    - name: Save hb32_xxxx.zip
      uses: actions/upload-artifact@v4
      with:
         name: hb32_${{matrix.compiler}}
         path: c:\temp\hb32_${{matrix.compiler}}.7z

    - name: Save addons_hb32_xxxx.zip
      uses: actions/upload-artifact@v4
      with:
         name: addons_hb32_${{matrix.compiler}}
         path: c:\temp\addons_hb32_${{matrix.compiler}}.7z

    - name: Save pack_hb32_xxxx.zip
      if: ${{ 'true' == 'false' }}
      uses: actions/upload-artifact@v4
      with:
         name: pack_hb32_${{matrix.compiler}}
         path: c:\temp\pack_hb32_${{matrix.compiler}}.7z
#----------------------------
